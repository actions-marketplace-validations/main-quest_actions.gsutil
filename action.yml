name: "gsutil shortcut"
description: "Issues gsutil commands while also detecting the project id from the provided service account key"
inputs:
  key:
    description: Service account json key, base64 encrypted or not
    required: true
  do:
    description: Command to exec
    required: true
    
runs:
  using: "composite"
  steps:  
    - name: Finding the project id
      id: proj_id_finder
      shell: bash
      run: |
        kf=$(mktemp)
        echo "${{ inputs.key }}" > "$kf"
        prefix="\"project_id\":"

        # Important to do this, as grep returns non-zero if no match is found
        echo [Debug] Find project line in suppposedly non-encripted key
        line=$(grep -F "$prefix" "$kf" || echo '')

        echo [Debug] Test line
        if [ -z "$line" ]; then
          # We are dealing with a base64 string, probably
          echo [Debug] Decoding supposedly base64 key
          f=$(mktemp)

          echo [Debug] Decoding to $f
          (cat "$kf" | base64 -d > "$f") || echo "decoding failed"

          echo [Debug] Find project line in decripted key
          line=$(grep -F "$prefix" $f || echo '')
        fi
        
        if [ -z "$line" ]; then
          echo [Debug] We couldn\'t find "$prefix" string in the key file, nor in the decoded version of it. Trying without setting the project id...
        else
          echo [Debug] Remove prefix, double quotes, columns and commas, and new lines from 
          project_id=$(echo "$line" | sed -e "s/$prefix//g" -e 's/\"//g' -e 's/\://g' -e 's/\,//g' | xargs echo -n)

          echo [Debug] Project id found: "$project_id"
          echo ::set-output name=value::"$project_id"
        fi

    - name: Running gsutil command
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: ${{ steps.proj_id_finder.outputs.value }}
        APPLICATION_CREDENTIALS: ${{ inputs.key }}
      with:
        args: ${{ inputs.do }}
        cli: gsutil
